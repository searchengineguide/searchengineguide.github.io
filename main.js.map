{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/shared/index.ts","webpack:///./src/app/shared/search/search.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchComponent } from './search/search.component';\n\nconst routes: Routes = [\n  { path: 'search', component: SearchComponent },\n  { path: '', redirectTo: '/search', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}\\n  </h1>\\n  <h3><a href=\\\"https://searchengineapp.github.io/\\\">Home</a></h3>\\n  <h3><a href=\\\"http://www.gutenberg.org/\\\">Project Gutenberg</a></h3>\\n  <br/>\\n  <p>Moogle is a search engine application that searches a collection of online books</p> \\n  <p>from the Gutenberg ebook collection and returns a list of sentences containing</p> \\n  <p>the specified search term. It also return a citation for each sentence including</p> \\n  <p>the name of book and the author of the book which the sentence is taken from</p>\\n  <p>Lets consider one book as an example and perform a search in one page of it.</p> \\n  <p> </p>\\n  <p>For example we consider the book \\\"A Christmas Carol\\\" by \\\"Charles Dickens: \\\"</p>\\n\\n  <img src=\\\"http://www.picturebritain.com/wp-content/uploads/2012/12/A_Christmas_Carol_frontpiece.jpg\\\"\\n  width=\\\"220\\\" height=\\\"140\\\" />\\n  <p>Lets consider the first page of the chapter one and perform a search in that page: </p>\\n  <img src=\\\"http://i.huffpost.com/gen/1517083/images/o-GEORGE-OBSORNE-CHRISTMAS-CAROL-facebook.jpg\\\"\\n  width=\\\"220\\\" height=\\\"140\\\" />\\n  <p>Searching for the word \\\"Scrooge\\\" in the text field:</p>\\n\\n  <form>\\n    <input type=\\\"search\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup.enter)=\\\"search()\\\">\\n    <button type=\\\"button\\\" (click)=\\\"search()\\\">Search</button>\\n  </form>\\n</div>\\n  <p>Result</p>\\n  <p>----------------------------------------------------------------------------------------------------------------------------------------\\n  -----------------------------------------------------------------------------------------------------------------------------------------------</p>\\n  <p>And now the counting-house belonged only to Scrooge. (A Christmas Carol by Charles Dickens)</p>\\n  <p>----------------------------------------------------------------------------------------------------------------------------------------\\n  -----------------------------------------------------------------------------------------------------------------------------------------------</p>\\n  <p>George Gideon Osborne Scrooge. (A Christmas Carol by Charles Dickens)</p>\\n  <p>----------------------------------------------------------------------------------------------------------------------------------------\\n  -----------------------------------------------------------------------------------------------------------------------------------------------</p>\\n  <p>“Merry Christmas, Mr Scrooge!” said Bob Cratchit as he entered the counting-house: “Merry?” Scrooge snapped, like a reptile that only looked after his rich banker friend. (A Christmas Carol by Charles Dickens)</p>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'User Guide!';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './search/search.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \":host {\\r\\n    display: block;\\r\\n    padding: 0 20px;\\r\\n  }\\r\\n  table {\\r\\n    margin-top: 10px;\\r\\n    border-collapse: collapse;\\r\\n  }\\r\\n  th {\\r\\n    text-align: left;\\r\\n    border-bottom: 2px solid #ddd;\\r\\n    padding: 8px;\\r\\n  }\\r\\n  td {\\r\\n    border-top: 1px solid #ddd;\\r\\n    padding: 8px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtHQUNqQjtFQUNEO0lBQ0UsaUJBQWlCO0lBQ2pCLDBCQUEwQjtHQUMzQjtFQUVEO0lBQ0UsaUJBQWlCO0lBQ2pCLDhCQUE4QjtJQUM5QixhQUFhO0dBQ2Q7RUFFRDtJQUNFLDJCQUEyQjtJQUMzQixhQUFhO0dBQ2QiLCJmaWxlIjoic3JjL2FwcC9zZWFyY2gvc2VhcmNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBhZGRpbmc6IDAgMjBweDtcclxuICB9XHJcbiAgdGFibGUge1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcbiAgfVxyXG4gIFxyXG4gIHRoIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2RkZDtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICB9XHJcbiAgXHJcbiAgdGQge1xyXG4gICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgfSJdfQ== */\"","module.exports = \"<h2>Search</h2>\\n<form>\\n  <input type=\\\"search\\\" name=\\\"query\\\" [(ngModel)]=\\\"query\\\" (keyup.enter)=\\\"search()\\\">\\n  <button type=\\\"button\\\" (click)=\\\"search()\\\">Search</button>\\n</form>\\n<table *ngIf=\\\"searchResults\\\">\\n  <thead>\\n  <tr>\\n    <th>Result</th>\\n  </tr>\\n  </thead>\\n  <tbody>\\n  <tr *ngFor=\\\"let person of searchResults; let i=index\\\">\\n    <td>{{person.result}}</td>\\n  </tr>\\n  </tbody>\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { Result, SearchService } from '../shared';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\n\nexport class SearchComponent implements OnInit {\n  query: string;\n  searchResults: Array< Result >;\n\n  constructor(private searchService: SearchService) { }\n\n  ngOnInit() {\n  }\n\n  search(): void {\n    this.searchService.search(this.query).subscribe(\n      (data: any) => { this.searchResults = data; },\n      error => console.log(error)\n    );\n  }\n\n}\n\n\n","export * from './search/search.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  \n  search(q: string): Observable<any> {\n    if (!q || q === '*') {\n      q = '';\n    } else {\n      q = q.toLowerCase();\n    }\n    return this.getAll().pipe(\n      map((data: any) => data\n        .filter(item => JSON.stringify(item).toLowerCase().includes(q)))\n    );\n  }\n\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    return this.http.get('assets/data/people.json');\n  }\n}\n\n\nexport class Result {\n  id: number;\n  name: string;\n  \n  constructor(obj?: any) {\n    this.id = obj && Number(obj.id) || null;\n    this.name = obj && obj.name || null;\n  }\n}\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}